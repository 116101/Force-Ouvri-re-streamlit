import streamlit as st

# Chatbot Syndical
class ChatbotSyndical:
    def __init__(self):
        self.base_connaissances = {
            "droits travailleurs": """Les droits des travailleurs incluent :
            - Un salaire minimum garanti.
            - La protection contre le licenciement abusif.
            - Des cong√©s pay√©s et des horaires de travail r√©glement√©s.
            - Le droit de se syndiquer et de faire gr√®ve.
            - Une couverture sociale et des conditions de travail s√©curis√©es.""",

            "r√¥le syndicat": """Un syndicat a pour mission de :
            - D√©fendre les droits des travailleurs.
            - N√©gocier avec l‚Äôemployeur pour am√©liorer les conditions de travail et les salaires.
            - Assister et repr√©senter les salari√©s en cas de conflit.
            - Organiser des mobilisations et sensibiliser les travailleurs.""",

            "n√©gociation collective": """La n√©gociation collective est un processus entre employeurs et syndicats pour fixer les conditions de travail et les salaires.
            √âtapes :
            1. Pr√©parer des revendications pr√©cises.
            2. Identifier les arguments de l‚Äôemployeur et pr√©parer des contre-arguments.
            3. Conduire les discussions avec diplomatie et fermet√©.
            4. Conclure par un accord ou poursuivre la mobilisation si n√©cessaire.""",

            "r√©daction tract": """Un tract efficace doit √™tre :
            - **Court et impactant** : Pas plus d‚Äôune page.
            - **Mobilisateur** : Utiliser des phrases directes et percutantes.
            - **Argument√©** : Donner des raisons claires d‚Äôagir.

            Exemple :
            **STOP √Ä L‚ÄôEXPLOITATION ‚Äì REJOIGNEZ LA GR√àVE !**
            Nous, salari√©s de [entreprise], d√©non√ßons des conditions de travail inacceptables.
            Il est temps d‚Äôagir ! Rejoignez-nous !"""
        }

    def r√©pondre(self, question):
        question = question.lower()
        for cl√© in self.base_connaissances:
            if cl√© in question:
                return self.base_connaissances[cl√©]
        return "Je ne connais pas encore la r√©ponse √† cette question, mais je peux essayer de la g√©n√©rer pour vous !"

    def g√©n√©rer_document(self, type_document, contexte=""):
        if type_document == "courrier":
            return f"""Objet : {contexte if contexte else 'Demande syndicale'}

Madame, Monsieur,

Nous souhaitons vous interpeller sur la situation concernant [pr√©ciser la situation]. 
Nous demandons [revendications principales].

Nous vous proposons une rencontre le [date] pour en discuter.

Dans l‚Äôattente de votre r√©ponse,
Cordialement,
[Nom du syndicat]"""

        elif type_document == "tract":
            return f"""**{contexte.upper() if contexte else 'MOBILISONS-NOUS !'}**

Salari√©s de [entreprise], il est temps d‚Äôagir !
- [Motif de la mobilisation]
- [Revendication principale]

Rejoignez-nous le [date] pour une action collective ! Plus nous serons nombreux, plus nous serons forts !"""

        else:
            return "Type de document non reconnu."

# Initialisation du chatbot
chatbot = ChatbotSyndical()

# Interface Streamlit
st.title("ü§ñ Chatbot Syndical Interactif")

# Section Chatbot
st.header("üí¨ Posez votre question")
user_input = st.text_input("Tapez votre question ici...")

if st.button("Envoyer"):
    r√©ponse = chatbot.r√©pondre(user_input)
    st.write(f"ü§ñ **R√©ponse** : {r√©ponse}")

# Section G√©n√©ration de Documents
st.header("üìÑ G√©n√©ration de Documents Syndicaux")
doc_type = st.selectbox("Choisissez un type de document :", ["Courrier syndical", "Tract de mobilisation"])
contexte = st.text_input("D√©crivez le contexte du document (ex: Demande de r√©union, Mobilisation...)")

if st.button("G√©n√©rer Document"):
    type_doc = "courrier" if doc_type == "Courrier syndical" else "tract"
    document = chatbot.g√©n√©rer_document(type_doc, contexte)
    st.text_area("üìÑ Document g√©n√©r√© :", document, height=200)

st.write("üìå **Astuce** : Vous pouvez copier-coller le texte g√©n√©r√© pour l'utiliser directement.")
